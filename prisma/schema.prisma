// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ===================
// Multi-tenant base
// ===================
model Tenant {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
  pets      Pet[]
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  name     String
  password String
  tenantId String
  tenant   Tenant @relation(fields: [tenantId], references: [id])
  role     String @default("admin") // admin, empleado, etc

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([tenantId])
}

model Owner {
  id        String   @id @default(cuid())
  name      String
  address   String
  phone     String
  pets      Pet[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pet {
  id             String          @id @default(cuid())
  name           String
  type           String
  age            Int
  image          String
  breed          String
  color          String
  description    String
  tenantId       String
  tenant         Tenant          @relation(fields: [tenantId], references: [id])
  medicalRecords MedicalRecord[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  owner          Owner           @relation(fields: [ownerId], references: [id])
  ownerId        String
  foundPets      FoundPet[]
  @@index([tenantId])
}

model MedicalRecord {
  id          String   @id @default(cuid())
  petId       String
  pet         Pet      @relation(fields: [petId], references: [id])
  description String
  date        DateTime @default(now())
}


model FoundPet {
  id          String   @id @default(cuid())
  description String
  location    String
  dateFound   DateTime 
  contactInfo String?
  status     String   @default("found") // found, returned, etc
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  pet         Pet      @relation(fields: [petId], references: [id])
  petId       String

  @@index([status])
}